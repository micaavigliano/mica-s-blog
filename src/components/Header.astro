---
import ThemeToggler from "./ThemeToggler.astro";
---

<header>
  <nav id="main-nav">
    <ul>
      <li>
        <a href="/" class="nav-link">✨Mica</a>
      </li>
      <li>
        <a href="/blog" class="nav-link">blog</a>
      </li>
      <li>
        <a href="#" class="nav-link">contact me</a>
      </li>
    </ul>
    <nav>
      <a id="lng-link" href="#">English</a>
      <ThemeToggler />
    </nav>
  </nav>
</header>

<style scoped="scss">
  a,
  button {
    text-decoration-color: #eb4888;
    text-decoration-thickness: 3px;
    transition: transform 0.3s;
  }

  a:hover,
  button:hover {
    color: pink;
    transform: scale(1.1);
  }

  button {
    border: none;
    background-color: transparent;
    font-family: RobotoMono;
  }

  a:focus,
  button:focus {
    outline: 3px dotted pink;
    padding: 1%;
    width: auto;
  }

  .active {
    color: #fc5b9a;
  }

  header {
    padding: 3% 0 3% 0;
  }

  ul {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: flex-start;
    gap: 3%;
    flex-direction: row;
    width: -webkit-fill-available;
  }

  ul > li {
    list-style: none;
  }

  p {
    margin: 0;
  }

  nav {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
</style>

<script>
  import { getRelativeLocaleUrl } from "astro:i18n";

  const languageLink = document.getElementById("lng-link");

  document.addEventListener("DOMContentLoaded", () => {
    let currentPage = window.location.pathname;
    let navLinks = document.querySelectorAll(".nav-link");

    navLinks.forEach((link) => {
      if (link.getAttribute("href") === currentPage) {
        link.classList.add("active");
      }
    });

    const currentUrl = window.location.href;
    const currentLng = currentUrl.includes("/es/") ? "es" : "en";
    languageLink!.textContent = currentLng === "es" ? "English" : "Español";
    languageLink?.setAttribute(
      "aria-label",
      `change language to ${currentLng === "es" ? "English" : "Español"}`
    );
  });

  languageLink?.addEventListener("click", (ev) => {
    ev.preventDefault();

    const currentUrl = window.location.href;

    const currentLng = currentUrl.includes("/es/") ? "es" : "en";
    const newLang = currentLng === "en" ? "es" : "en";

    const newUrl = getRelativeLocaleUrl(newLang, "");

    window.location.href = newUrl;
  });
</script>
